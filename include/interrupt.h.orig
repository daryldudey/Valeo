/***************************************************************************
*   Copyright (C) 2004 by Daryl Dudey                                     *
*   daryl_dudey_uk@hotmail.com                                            *
*                                                                         *
*   This program is free software; you can redistribute it and/or modify  *
*   it under the terms of the GNU General Public License as published by  *
*   the Free Software Foundation; either version 2 of the License, or     *
*   (at your option) any later version.                                   *
*                                                                         *
*   This program is distributed in the hope that it will be useful,       *
*   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
*   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
*   GNU General Public License for more details.                          *
*                                                                         *
*   You should have received a copy of the GNU General Public License     *
*   along with this program; if not, write to the                         *
*   Free Software Foundation, Inc.,                                       *
*   59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.             *
***************************************************************************/

#ifndef __INTERRUPT_H__
#define __INTERRUPT_H__

// Interrupt call stack
typedef struct {
    uint32 sesp;
    uint16 sss, __sssu;
    uint32 edi;
    uint32 esi;
    uint32 ebp;
    uint32 edx;
    uint32 ecx;
    uint32 ebx;
    uint32 eax;
    uint16 ds, __dsh;
    uint16 es, __esh;
    uint16 fs, __fsh;
    uint16 gs, __gsh;
    uint32 eip;
    uint16 cs, __csh;
    uint32 eflags;
    uint32 esp;
    uint16 ss, __ssu;
}
sCallStack_t;

#define INTERRUPT_NUMIRQS 16

// Structure for interrupt handler
typedef bool IRQHandler( sCallStack_t *psStack );
typedef struct sIRQ_Handler sIRQ_Handler_t;
struct sIRQ_Handler {
    IRQHandler *m_pHandler;
    sIRQ_Handler_t *m_psPrevious;
};

void Interrupt_Init( void );
bool Interrupt_EnableIRQ( uint32 nInterrupt );
bool Interrupt_AttachHandler( uint32 nInterrupt, IRQHandler *pHandler );

#endif /* __INTERRUPT_H__ */
